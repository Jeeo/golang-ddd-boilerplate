// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/Jeeo/golang-ddd-boilerplate/configs"
	"github.com/Jeeo/golang-ddd-boilerplate/internal/application"
	"github.com/Jeeo/golang-ddd-boilerplate/internal/domain/service"
	"github.com/Jeeo/golang-ddd-boilerplate/internal/entrypoint/handler"
	"github.com/Jeeo/golang-ddd-boilerplate/internal/entrypoint/http"
	"github.com/Jeeo/golang-ddd-boilerplate/internal/entrypoint/mapper"
	"github.com/Jeeo/golang-ddd-boilerplate/internal/infrastructure/persistence"
	"github.com/Jeeo/golang-ddd-boilerplate/internal/infrastructure/repository"
)

// Injectors from wire.go:

func initHttpService() http.HttpService {
	config := configs.ProvideConfig()
	database := persistence.ProvideDatabase(config)
	personRepositoryImpl := repository.ProvidePersonRepository(database)
	personServiceImpl := service.ProvidePersonService(personRepositoryImpl)
	personMapperImpl := mapper.ProvidePersonMapper()
	personApplicationImpl := application.ProvidePersonApplication(personServiceImpl, personMapperImpl)
	personHandlerImpl := handler.ProvidePersonHandler(personApplicationImpl)
	echoServer := http.ProvideEchoServer(personHandlerImpl, config)
	return echoServer
}
